{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","React","createElement","className","alt","src","concat","id","name","email","CardList","cardComponent","robots","map","user","i","key","SearchBox","type","placeholder","onChange","searchChange","Scroll","style","overflowY","border","height","children","App","Component","constructor","super","this","onSearchChange","event","setState","searchfield","target","value","state","componentDidMount","fetch","then","response","json","render","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"oLAegBA,MAbFC,GAENC,IAAAC,cAAA,OAAKC,UAAU,uDACbF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA2BN,EAAMO,GAAE,cACxDN,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKF,EAAMQ,MACXP,IAAAC,cAAA,SAAIF,EAAMS,SCaPC,MAhBGV,IACd,MAAMW,EAAiBX,EAAMY,OAAOC,IAAI,CAACC,EAAKC,IAE1Cd,IAAAC,cAACH,EAAI,CAACiB,IAAKD,EACXR,GAAIP,EAAMY,OAAOG,GAAGR,GACpBC,KAAMR,EAAMY,OAAOG,GAAGP,KACtBC,MAAOT,EAAMY,OAAOG,GAAGN,SAG3B,OACIR,IAAAC,cAAA,WACIS,ICDGM,MAbIjB,GAEXC,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,SAAOC,UAAU,mCACjBe,KAAK,SACLC,YAAY,gBACZC,SAAUpB,EAAMqB,sBCETC,MARAtB,GAEPC,IAAAC,cAAA,OAAKqB,MAAO,CAACC,UAAW,SAASC,OAAQ,kBAAmBC,OAAO,UAC9D1B,EAAM2B,UC0CJC,MAvCf,cAAkBC,YACdC,cACIC,QAAOC,KAaXC,eAAkBC,KACdF,KAAKG,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,UAb1CN,KAAKO,MAAQ,CACT3B,OAAQ,GACRwB,YAAa,IAIrBI,oBACIC,MAAM,8CACLC,KAAKC,GAAYA,EAASC,QAC1BF,KAAK5B,GAAMkB,KAAKG,SAAS,CAACvB,OAAOE,KAOtC+B,SACI,MAAMjC,OAAEA,EAAMwB,YAAEA,GAAaJ,KAAKO,MAC5BO,EAAalC,EAAOmC,OAAOC,GACtBA,EAAMxC,KAAKyC,cAAcC,SAASd,EAAYa,gBAEzD,OAAQrC,EAAOuC,OAGPlD,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACe,EAAS,CAACI,aAAcW,KAAKC,iBAC9BhC,IAAAC,cAACoB,EAAM,KACHrB,IAAAC,cAACQ,EAAQ,CAACE,OAAUkC,MANhC7C,IAAAC,cAAA,UAAI,gBCrBDkD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAd,KAAAa,EAAAE,KAAA,UAAqBf,KAAKgB,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,YCCDW,IAASC,WAAWC,SAASC,eAAe,SAEpDtB,OACH5C,IAAAC,cAACD,IAAMmE,WAAU,KACfnE,IAAAC,cAAC0B,EAAG,QAQRwB","file":"static/js/main.4d3b377c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props)=>{\r\n    return(\r\n        <div className=\"tc bg-light-green dib pa3 ma3 br3 grow bw2 shadow-5\">\r\n          <img alt=\"robots\" src= {`https://robohash.org/${props.id}?200x200`} />\r\n          <div>\r\n            <h2>{props.name}</h2>\r\n            <p>{props.email}</p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default  Card","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\n\r\nconst CardList = (props) => {\r\n    const cardComponent  = props.robots.map((user,i) => {\r\n        return (\r\n        <Card key={i} \r\n        id={props.robots[i].id} \r\n        name={props.robots[i].name}  \r\n        email={props.robots[i].email} />\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n           {cardComponent}\r\n        </div> \r\n         )\r\n}\r\n\r\nexport default CardList","import React from \"react\"\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\" \r\n        placeholder=\"Search robots\"\r\n        onChange={props.searchChange}\r\n\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from \"react\";\r\n\r\nconst Scroll= (props)=>{\r\n    return(\r\n        <div style={{overflowY: \"scroll\",border: '1px solid black', height:\"500px\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React,{Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\"\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(user=>this.setState({robots:user}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n    \r\n    render(){\r\n        const { robots, searchfield}=this.state;\r\n        const filterRobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading...</h1> :\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2\">Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots = {filterRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from 'react-dom/client'\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root')) ;\n\nroot.render(\n  <React.StrictMode> \n    <App />\n </React.StrictMode>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n  /*  */"],"sourceRoot":""}